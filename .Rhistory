install.packages("Peptides", dependencies=TRUE)
seq <- "FLPVLAGLTPSIVPKLVCLLTKKC"
hmoment(seq = seq, angle = 100, window = 11)
Peptides-package
library(Peptides)
pepSeq <- "FLPVLAGLTPSIVPKLVCLLTKKC"
hmoment(seq = pepSeq, angle = 100, window = 11)
pepSeq <- "VILPQAPSGPSYATYLQPAQAQMLTPP"
hmoment(seq = pepSeq, angle = 100, window = 11)
hydrophobicity(pepSeq, "Aboderin")
hydrophobicity(pepSeq)
pepSeq2 <- "AGTQCEYWASRALDSEHSIGSMIQLPQ"
hydrophobicity(pepSeq2)
pepSeq3 <- "LHSGQNHLKEMAISVLEARACAAAGQS"
hydrophobicity(pepSeq3)
aacomp(pepSeq)
aacomp(pepSeq2)
boman(pepSeq)
boman(pepSeq2)
boman(pepSeq3)
charge(pepSeq)
charge(pepSeq2)
charge(pepSeq3)
data(H)
construct <- "VILPQAPSGPSYATYLQPAQAQMLTPPGGGGSLHSGQNHLKEMAISVLEARACAAAGQSGGGGSPLLPFYPPDEALEIGLELNSSALPPTEGGGGSAGTQCEYWASRALDSEHSIGSMIQLPQGGGGSAAYKGHHYPGPGNYFWKCLFMSGLSEVGGGGSDTLSAMSNPRAMQVLLQIQQGLQTLATGGGGSDKPLRRNNSYTSYIMAICGMPLDSFRAGGGGSEVIQTSKYYMRDVIAIESAWLLELAPHGGGGSGYISRVTAGKDSYIALVDKNIMGYIASGGGGSEHIHRAGGLFVADAIQVGFGRIGKHFW"
instaindex(pepSeq)
instaindex(pepSeq2)
instaindex(construct)
membpos(pepSeq)
membpos(pepSeq2)
membpos(pepSeq2,100)
membpos(pepSeq2,160)
membpos(pepSeq3,100)
membpos(pepSeq3,160)
install.packages("devtools")
library(limma)
## ----setup, message=FALSE, echo = FALSE-------------------------------------------------
library(BiocStyle)
library(knitr)
options(digits=3)
options(width=90)
source("http://bioconductor.org/workflows.R")
workflowInstall("RNAseq123")
source("http://bioconductor.org/workflows.R")
workflowInstall("RNAseq123")
install.packages(c("curl", "jsonlite", "memoise", "Peptides"))
library(limma)
library(Glimma)
library(edgeR)
library(Mus.musculus)
setwd("C:/Users/bersa/Jottacloud/Kursmateriell/Coursera_data_science/ProgrammingAssignment2")
library(swirl)
library("swirl")
swirl
install.packages("swirl")
library("swirl")
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique((c(3, 4, 5, 5, 5, 6, 6)))
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
